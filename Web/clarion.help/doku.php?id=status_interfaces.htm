<!DOCTYPE html>
<html lang="en" dir="ltr" class="no-js">
<head>
    <meta charset="utf-8" />
    <title>status_interfaces.htm [Clarion Community Help]</title>
    <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    <meta name="generator" content="DokuWiki"/>
<meta name="theme-color" content="#008800"/>
<meta name="robots" content="index,follow"/>
<meta name="keywords" content="status_interfaces.htm"/>
<link rel="search" type="application/opensearchdescription+xml" href="/lib/exe/opensearch.php" title="Clarion Community Help"/>
<link rel="start" href="/"/>
<link rel="contents" href="/doku.php?id=status_interfaces.htm&amp;do=index" title="Sitemap"/>
<link rel="manifest" href="/lib/exe/manifest.php"/>
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="/feed.php"/>
<link rel="alternate" type="application/rss+xml" title="Current namespace" href="/feed.php?mode=list&amp;ns="/>
<link rel="alternate" type="text/html" title="Plain HTML" href="/doku.php?do=export_xhtml&amp;id=status_interfaces.htm"/>
<link rel="alternate" type="text/plain" title="Wiki Markup" href="/doku.php?do=export_raw&amp;id=status_interfaces.htm"/>
<link rel="canonical" href="http://clarion.help/doku.php?id=status_interfaces.htm"/>
<link rel="stylesheet" type="text/css" href="/lib/exe/css.php?t=dokuwiki&amp;tseed=6c87f37cf2e26d7e09fa69b644b48db6"/>
<!--[if gte IE 9]><!-->
<script type="text/javascript">/*<![CDATA[*/var NS='';var JSINFO = {"id":"status_interfaces.htm","namespace":"","ACT":"show","useHeadingNavigation":0,"useHeadingContent":0};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="/lib/exe/jquery.php?tseed=23f888679b4f1dc26eef34902aca964f"></script>
<script type="text/javascript" charset="utf-8" src="/lib/exe/js.php?t=dokuwiki&amp;tseed=6c87f37cf2e26d7e09fa69b644b48db6"></script>
<!--<![endif]-->
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="shortcut icon" href="/lib/tpl/dokuwiki/images/favicon.ico" />
<link rel="apple-touch-icon" href="/lib/tpl/dokuwiki/images/apple-touch-icon.png" />
    </head>

<body>
    <div id="dokuwiki__site"><div id="dokuwiki__top" class="site dokuwiki mode_show tpl_dokuwiki     ">

        
<!-- ********** HEADER ********** -->
<div id="dokuwiki__header"><div class="pad group">

    
    <div class="headings group">
        <ul class="a11y skip">
            <li><a href="#dokuwiki__content">skip to content</a></li>
        </ul>

        <h1><a href="/doku.php?id=start"  accesskey="h" title="[H]"><img src="/lib/exe/fetch.php?media=logo.png" width="354" height="103" alt="" /> <span>Clarion Community Help</span></a></h1>
            </div>

    <div class="tools group">
        <!-- USER TOOLS -->
                    <div id="dokuwiki__usertools">
                <h3 class="a11y">User Tools</h3>
                <ul>
                    <li class="action login"><a href="/doku.php?id=status_interfaces.htm&amp;do=login&amp;sectok=" title="Log In" rel="nofollow"><span>Log In</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M10 17.25V14H3v-4h7V6.75L15.25 12 10 17.25M8 2h9a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2v-4h2v4h9V4H8v4H6V4a2 2 0 0 1 2-2z"/></svg></a></li>                </ul>
            </div>
        
        <!-- SITE TOOLS -->
        <div id="dokuwiki__sitetools">
            <h3 class="a11y">Site Tools</h3>
            <form action="/doku.php?id=start" method="get" role="search" class="search doku_form" id="dw__search" accept-charset="utf-8"><input type="hidden" name="do" value="search" /><input type="hidden" name="id" value="status_interfaces.htm" /><div class="no"><input name="q" type="text" class="edit" title="[F]" accesskey="f" placeholder="Search" autocomplete="on" id="qsearch__in" value="" /><button value="1" type="submit" title="Search">Search</button><div id="qsearch__out" class="ajax_qsearch JSpopup"></div></div></form>            <div class="mobileTools">
                <form action="/doku.php" method="get" accept-charset="utf-8"><div class="no"><input type="hidden" name="id" value="status_interfaces.htm" /><select name="do" class="edit quickselect" title="Tools"><option value="">Tools</option><optgroup label="Page Tools"><option value="edit">Show pagesource</option><option value="revisions">Old revisions</option><option value="backlink">Backlinks</option></optgroup><optgroup label="Site Tools"><option value="recent">Recent Changes</option><option value="media">Media Manager</option><option value="index">Sitemap</option></optgroup><optgroup label="User Tools"><option value="login">Log In</option></optgroup></select><button type="submit">&gt;</button></div></form>            </div>
            <ul>
                <li class="action recent"><a href="/doku.php?id=status_interfaces.htm&amp;do=recent" title="Recent Changes [r]" rel="nofollow" accesskey="r">Recent Changes</a></li><li class="action media"><a href="/doku.php?id=status_interfaces.htm&amp;do=media&amp;ns=" title="Media Manager" rel="nofollow">Media Manager</a></li><li class="action index"><a href="/doku.php?id=status_interfaces.htm&amp;do=index" title="Sitemap [x]" rel="nofollow" accesskey="x">Sitemap</a></li>            </ul>
        </div>

    </div>

    <!-- BREADCRUMBS -->
            <div class="breadcrumbs">
                                        <div class="trace"><span class="bchead">Trace:</span> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=round_set_round_cornered_box_.htm"  class="breadcrumbs" title="round_set_round_cornered_box_.htm">round_set_round_cornered_box_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=rtf_declare_text_control_as_richedit_.htm"  class="breadcrumbs" title="rtf_declare_text_control_as_richedit_.htm">rtf_declare_text_control_as_richedit_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=scroll_set_scrolling_control_.htm"  class="breadcrumbs" title="scroll_set_scrolling_control_.htm">scroll_set_scrolling_control_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=separator_set_separator_line_item_.htm"  class="breadcrumbs" title="separator_set_separator_line_item_.htm">separator_set_separator_line_item_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=single_set_text_for_single_line_entry_.htm"  class="breadcrumbs" title="single_set_text_for_single_line_entry_.htm">single_set_text_for_single_line_entry_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=skip_set_tab_key_skip_or_conditional_print_control_.htm"  class="breadcrumbs" title="skip_set_tab_key_skip_or_conditional_print_control_.htm">skip_set_tab_key_skip_or_conditional_print_control_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=smooth_set_smooth_progress_bar_increments_.htm"  class="breadcrumbs" title="smooth_set_smooth_progress_bar_increments_.htm">smooth_set_smooth_progress_bar_increments_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=spread_set_evenly_spaced_tab_controls_.htm"  class="breadcrumbs" title="spread_set_evenly_spaced_tab_controls_.htm">spread_set_evenly_spaced_tab_controls_.htm</a></bdi> <span class="bcsep">•</span> <bdi><a href="/doku.php?id=status_set_status_bar_.htm"  class="breadcrumbs" title="status_set_status_bar_.htm">status_set_status_bar_.htm</a></bdi> <span class="bcsep">•</span> <span class="curid"><bdi><a href="/doku.php?id=status_interfaces.htm"  class="breadcrumbs" title="status_interfaces.htm">status_interfaces.htm</a></bdi></span></div>
                    </div>
    


    <hr class="a11y" />
</div></div><!-- /header -->

        <div class="wrapper group">

            
            <!-- ********** CONTENT ********** -->
            <div id="dokuwiki__content"><div class="pad group">
                
                <div class="pageId"><span>status_interfaces.htm</span></div>

                <div class="page group">
                                                            <!-- wikipage start -->
                    <!-- TOC START -->
<div id="dw__toc" class="dw__toc">
<h3 class="toggle">Table of Contents</h3>
<div>

<ul class="toc">
<li class="level2"><div class="li"><a href="#coming_in_a_future_release">(Coming in a future release)</a></div></li>
<li class="level2"><div class="li"><a href="#interfaces">Interfaces</a></div></li>
<li class="level2"><div class="li"><a href="#section"></a></div></li>
</ul>
</div>
</div>
<!-- TOC END -->
<div class="table sectionedit1"><table class="inline">
	<tr class="row0">
		<td class="col0"> <strong>Navigation:</strong>  <a href="/doku.php?id=introduction.htm" class="wikilink1" title="introduction.htm">Language Reference</a> &gt; 9 -  Window and Report Attributes &gt; Window and Report Attributes &gt;STATUS INTERFACES </td><td class="col1"> <a href="/doku.php?id=status_set_status_bar_.htm" class="media" title="status_set_status_bar_.htm"><img src="/lib/exe/fetch.php?media=btn_prev_n.gif" class="media" title="Previous page" alt="Previous page" /></a><a href="/doku.php?id=introduction.htm" class="media" title="introduction.htm"><img src="/lib/exe/fetch.php?media=btn_home_n.gif" class="media" title="Return to chapter overview" alt="Return to chapter overview" /></a><a href="/doku.php?id=std_set_standard_behavior_.htm" class="media" title="std_set_standard_behavior_.htm"><img src="/lib/exe/fetch.php?media=btn_next_n.gif" class="media" title="Next page" alt="Next page" /></a> </td>
	</tr>
	<tr class="row1">
		<td class="col0 leftalign" colspan="2">  </td>
	</tr>
</table></div>

<h2 class="sectionedit2" id="coming_in_a_future_release">(Coming in a future release)</h2>
<div class="level2">

<p>
The Status bar implementation exposes a set of 3 interfaces:
</p>

<p>
<strong>IStatusZone</strong>: gives access to the properties of a particular zone; there are 3 extended interfaces derived from it for Text, Image and Progress zones - <strong> ITextZone, IImageZone and IProgressZone</strong>
</p>

<p>
<strong>IStatusStyle</strong>: represents an instance of the style for the Status bar
</p>

<p>
<strong>IStatusBar</strong>: represents an instance of the Status bar object
</p>

<p>
The Status bar object manages the list of zones. The style can be applied to a status bar to change its appearance.
</p>

<p>
Supported Properties:
</p>

<p>
1) <strong>PROP:StatusInterface</strong> - is used to get a reference to the WINDOW&#039;s status bar object
</p>

<p>
2) <strong>PROP:StatusStyle</strong> - a SYSTEM property to get the reference to the default status style object
</p>

<p>
Both properties are read-only but the returned objects can be modified.
</p>

<p>
When the Status bar object is created because of OPENing a WINDOW with the STATUS attribute, or by setting the PROP:Status property to a WINDOW without a Status bar, the current default style is used to set up the bar&#039;s appearance. The Status bar uses its own copy of the style data. Therefore changes in the default style do not affect existing status bars automatically. The current bar&#039;s style can be changed by a call to the <strong>IStatusBar.ApplyStyle</strong> method.
</p>

<p>
Because one instance of the status bar object can be shared by more than one WINDOW, there is no method to destroy an instance of the IStatusBar interface. For backward compatibility, the status bar of a WINDOW can be destroyed by specifying a zero width for the first zone using the PROP:Status property:
</p>

<p>
Window {PROP:Status, 1} = 0
</p>

<p>
The initial state of the default status Style object mimics the traditional Status bar&#039;s appearance. The only visual difference are the use of different RGB values for the colors used to draw the Status bar&#039;s upper border and the zones bevels.
</p>

<p>
All of the Status bar interfaces can be found in the file <strong>CWSTATUS.INT</strong> located in the LIBSRC\WIN Folder.
</p>

</div>

<h2 class="sectionedit3" id="interfaces">Interfaces</h2>
<div class="level2">

</div>
<div class="level2">
<hr />

<p>
<strong>IStatusZone INTERFACE,COM</strong>
</p>

<p>
<strong>GetKind              PROCEDURE(),SIGNED</strong>
</p>

<p>
Returns numeric value of zone&#039;s type as they are listed in the StatusZoneKind ITEMIZE structure
</p>

<p>
StatusZoneKind     ITEMIZE(0),PRE(STATUSZONE)
</p>

<p>
TEXT                 EQUATE
</p>

<p>
IMAGE                EQUATE
</p>

<p>
PROGRESS             EQUATE
</p>

<p>
END
</p>

<p>
<strong>GetWidth             PROCEDURE(BOOLEAN),SIGNED</strong>
</p>

<p>
Changes the unadjusted width of the zone. Rules are the same as for value passed to the PROP:Status property. The unadjusted width is given in zone&#039;s dialog units and does not include zone margins and the optional separator.
</p>

<p>
If the value is negative, the zone is expandable with minimum width (in dlu&#039;s) equal to the absolute value of the passed number. By default, when A zone is created its unadjusted width is set equal to -1. For text zones dialog units are determined by the font used to draw text in that zone. For zones of other kinds,dialog units are determined by the font from the Status bar&#039;s style.
</p>

<p>
<strong>HasBevel             PROCEDURE(),BOOLEAN</strong>
</p>

<p>
Returns TRUE if a bevel is present around the content part of the zone, and FALSE if no bevel is present.
</p>

<p>
<strong>SetBevel             PROCEDURE(SIGNED)           ! Parameter: StatusFlagValue</strong>
</p>

<p>
Modifies zone&#039;s flag controlling the drawing of the bevel around content area. The passed parameter must be one of the values listed in the StatusFlagValue ITEMIZE structure:
</p>

<p>
- STATUSFLAG:OFF - do not draw the bevel
</p>

<p>
- STATUSFLAG:ON - draw the bevel
</p>

<p>
- STATUSFLAG:DEFAULT - drawing of the bevel is determined by the Status bar&#039;s Style
</p>

<p>
Default value is STATUSFLAG:DEFAULT.
</p>

<p>
<strong>HasSeparator         PROCEDURE(),BOOLEAN</strong>
</p>

<p>
Returns TRUE if separator is drawing at the far edge of the zone and FALSE if no separator is drawn
</p>

<p>
<strong>SetSeparator         PROCEDURE(SIGNED)           ! Parameter: StatusFlagValue</strong>
</p>

<p>
Modifies zone&#039;s flag controlling the drawing of the separator. Passed parameter must be one of values listed in the StatusFlagValue ITEMIZE structure:
</p>

<p>
- STATUSFLAG:OFF - do not draw the separator
</p>

<p>
- STATUSFLAG:ON  - draw the separator
</p>

<p>
- STATUSFLAG:DEFAULT - drawing of the separator is determined by the Status bar&#039;s style.
</p>

<p>
Default value is STATUSFLAG:DEFAULT.
</p>

<p>
If the last zone has the separator flag equal to STATUSFLAG:DEFAULT, the separator is not drawn regardless of the style settings.
</p>
<hr />

<p>
<strong>ITextZone          INTERFACE(IStatusZone),COM</strong>
</p>

<p>
<strong>GetText              PROCEDURE(),STRING</strong>
</p>

<p>
Returns the current text of the zone. The returned value can be passed to the ToString function to convert it to a STRING type.
</p>

<p>
<strong>SetText              PROCEDURE(&lt;;STRING&gt;)</strong>
</p>

<p>
Changes the text displayed in the zone. Default value is an empty string.
</p>

<p>
<strong>GetAlignment         PROCEDURE(),SIGNED          ! Result: StatusAlignValue</strong>
</p>

<p>
Returns the numeric value of text alignment as they are listed in the StatusAlignValue ITEMIZE structure. The STATUSALIGN:DEFAULT and STATUSALIGN:LEFT values are
</p>

<p>
equivalent.
</p>

<p>
! Alignment of text in text zones
</p>

<p>
StatusAlignValue   ITEMIZE(0),PRE(STATUSALIGN)
</p>

<p>
DEFAULT                    EQUATE
</p>

<p>
LEFT                        EQUATE
</p>

<p>
RIGHT                      EQUATE
</p>

<p>
CENTER                      EQUATE
</p>

<p>
END
</p>

<p>
<strong>SetAlignment         PROCEDURE(SIGNED)           ! Parameter: StatusAlignValue</strong>
</p>

<p>
Changes the text alignment in the zone content area. Default value is STATUSALIGN:DEFAULT
</p>

<p>
<strong>GetIndent            PROCEDURE(),SIGNED</strong>
</p>

<p>
Returns the value of text indentation in pixels relative to the base point determined by current alignment.
</p>

<p>
<strong>SetIndent            PROCEDURE(SIGNED)</strong>
</p>

<p>
Changes text indent value to the passed value, counted in pixels. Default value is 0.
</p>

<p>
<strong>GetFont              PROCEDURE(),*IFontProperties</strong>
</p>

<p>
Returns an instance of the IFontProperties interface allowing to modify parameters of the font used to draw text in the zone. A NULL result means that the zone is using the font specified by the Status bar&#039;s style.
</p>

<p>
<strong>SetFont              PROCEDURE(&lt;;*IFontProperties&gt;)</strong>
</p>

<p>
Changes the font used to draw text in the zone.Default value is NULL, indicating to use the font from the Status bar&#039;s style.
</p>

<p>
<strong>* Notes:

The IFontDescription interface does not have public methods to clone and destroy instances. ITextZone.SetFont automatically releases the previous zone&#039;s font (unless it is NULL), clones the passed font (unless it is NULL) and assigns it to the zone.

The expected flow of work with a zone&#039;s font is as follows:

ZoneFont &amp;amp;= BarStyle.GetFont()          ! Get the font from style

Zone.SetFont (ZoneFont)                ! Set the clone of font to zone

ZoneFont &amp;amp;= Zone.GetFont()              ! Get the reference to cloned font

…. code to modify font …

Zone.FontChanged()                       ! Notify zone that font changed

</strong>GetTextColor         PROCEDURE(),COLORREF<strong>

Returns the color used to draw text in the zone. If the zone has its own font, the returned value is equal to result of call to IFontProperties.FontColor() for this font. If the zone is using the default font from the bar&#039;s style, the text color can be changed separately. In this case, GetTextColor() returns that color value.

</strong>SetTextColor         PROCEDURE(COLORREF)<strong>

Sets/changes color used for drawing text. If the zone has its own font, this function has the same effect as a call to the  font&#039;s IFontProperties.FontColor(newcolor) method. If the

zone is using the default font from the bar&#039;s style, this function can be used to change text color in the zone while retaining all other characteristics of the default font.

</strong>FontChanged          PROCEDURE()<strong>

This method must be called to notify the zone that its font has been changed by calls to methods of the IFontPropertiesinterface returned by the GetFont function.

—-

</strong>IImageZone         INTERFACE(IStatusZone),COM<strong>

</strong>GetImage             PROCEDURE(),STRING<strong>

Returns the name of the image drawn in the zone. Returned value can be passed to the ToString function to convert it to STRING type.

</strong>SetImage             PROCEDURE(&lt;;STRING&gt;)<strong>

Sets/changes the image displayed in the zone. Default value is NULL which means that zone remains blank.

</strong>* Notes:
</p>

<p>
If the width of zone is greater than the width of the image, the image is drawn left aligned in the the zone content rectangle (right-aligned in case of right-to-left window layout). If width of the zone is less or equal to the width of the image, the image is drawn centered in the zone content rectangle.
</p>

<p>
<strong>GetDrawMode          PROCEDURE(),SIGNED</strong>          ! Result: StatusImageMode
</p>

<p>
Returns the numeric value of the image drawing mode as they are listed in the StatusImageMode ITEMIZE structure.
</p>

<p>
! Modes of drawing images in image zones
</p>

<p>
StatusImageMode    ITEMIZE(0),PRE(STATUSIMAGE)
</p>

<p>
NORMAL               EQUATE
</p>

<p>
DISABLED             EQUATE
</p>

<p>
GRAYED               EQUATE
</p>

<p>
END
</p>

<p>
<strong>SetDrawMode          PROCEDURE(SIGNED)</strong>           ! Parameter: StatusImageMode
</p>

<p>
Changes the mode to draw zone image. Parameter must be one of values listed in the StatusImageMode ITEMIZE structure. Default value is STATUSIMAGE:NORMAL.
</p>
<hr />

<p>
<strong>IProgressZone      INTERFACE(IStatusZone),COM</strong>
</p>

<p>
<strong>GetValue             PROCEDURE(),LONG</strong>
</p>

<p>
Returns the current progress value.
</p>

<p>
<strong>SetValue             PROCEDURE(LONG)</strong>
</p>

<p>
Changes the current progress value.
</p>

<p>
<strong>GetMin               PROCEDURE(),LONG</strong>
</p>

<p>
Returns the lower bound for progress value.
</p>

<p>
<strong>GetMax               PROCEDURE(),LONG</strong>
</p>

<p>
Returns the upper bound for progress value.
</p>

<p>
<strong>SetRange             PROCEDURE(LONG lo, LONG hi)</strong>
</p>

<p>
Changes the lower and upper bounds for the progress value. Default range is 0..100
</p>

<p>
<strong>GetColor             PROCEDURE(),COLORREF</strong>
</p>

<p>
Returns the color used to draw the progress bar.
</p>

<p>
<strong>SetColor             PROCEDURE(COLORREF)</strong>
</p>

<p>
Changes the color to draw the progress bar.
</p>

<p>
<strong>* Notes:

If the progress zone has a bevel, the bevel is used as the frame for the progress bar. If the zone does not have a bevel, additional lines are drawn to show the unfilled part of the progress bar.

—-

</strong>Clone                PROCEDURE(),*IStatusStyle<strong>

Returns a cloned copy of the style object.

</strong>Destroy              PROCEDURE()<strong>

Destroys the style object. The Destroy method mustbe called for all style objects returned from calls to IStatusStyle.Clone methods.

</strong>CreateBar            PROCEDURE(*WINDOW),*IStatusBar<strong>

Creates the status bar object for the passed WINDOW using the style determining by SELF. The previous WINDOW&#039;s status bar object is disposed. It is not recommended to use this function for the active MDI child window. Created status bar has no zones and is frozen.

</strong>Apply                PROCEDURE(&lt;;*IStatusStyle&gt;)<strong>

Copies information from one style object to another. Can be used for “atomic” changing of the system default status style.

</strong>GetMetric            PROCEDURE(SIGNED),SIGNED   <strong>! Parameter: StatusMetric

Returns the value for the given style metric. Parameter must be one of values listed in the StatusMetric ITEMIZE structure.

Supported metrics are:

STATUS:HMARGIN - margin from the status bar edge to the first zone and if the resize gripper is drawn, from the last zone to the status bar edge.

Default value is 4.

STATUS:ZONEHMARGIN - Horizontal margins around the zone content rectangle. Default value is 4.

STATUS:ZONEVMARGIN - Vertical margins above and below the zone content rectangle. Default value is 2.

STATUS:TEXTHMARGIN - Horizontal margins around the text bounding rectangle in text zones. Default value is 2.

STATUS:TEXTVMARGIN - Vertical margins above and below the text bounding rectangle in text zones. Default value is 0.

STATUS:TEXTINDENT - indentation of text relatively the base point (determined by text alignment) in the text bounding rectangle.

Default value is 0.

STATUS:SEPMARGIN - margins above and below the zones&#039; separator line. Default value is 2.

</strong>*Notes: All returned values are in pixels.
</p>

<p>
<strong>SetMetric            PROCEDURE(SIGNED, SIGNED)   </strong>! 1st Parameter: StatusMetric
</p>

<p>
Changes the given style metric. The first parameter must be one of values listed in the StatusMetric ITEMIZE structure.
</p>

<p>
<strong>GetHeight            PROCEDURE(BOOLEAN = FALSE),SIGNED</strong>
</p>

<p>
Returns the height in pixels of the status bar determined by the style. If the parameter value is FALSE, the function returns the value set by last call to the SetHeight method. If parameter is TRUE, the function returns adjusted height value. Adjusted height is maximum of GetHeight(FALSE)
</p>

<p>
and height calculated from the style&#039;s font and metrics.
</p>

<p>
<strong>SetHeight            PROCEDURE(SIGNED)</strong>
</p>

<p>
Changes the unadjusted height for styled status bars. Passed value must be in pixels. Default value is 0, i.e. the adjusted height is determined by the font and metrics.
</p>

<p>
<strong>BkgndBrush           PROCEDURE(),*IBrush</strong>
</p>

<p>
Returns the instance of the IBrush interface used to draw the Status bar&#039;s background. If IBrush.Type is CWBrush_Null (default), the background is painted using the COLOR:BTNFACE color.
</p>

<p>
<strong>GetFont              PROCEDURE(),*IFontProperties</strong>
</p>

<p>
Returns the instance of the IFontProperties interface used as the default font for Text zones.
</p>

<p>
<strong>SetFont              PROCEDURE(&lt;;*IFontProperties&gt;)</strong>
</p>

<p>
Sets/changes the style&#039;s default font. If the passed parameter is NULL (default), the font specified by SYSTEM properties is used.
</p>

<p>
<strong>GetTextColor         PROCEDURE(),COLORREF</strong>
</p>

<p>
Returns the default color used to draw text in Text zones.
</p>

<p>
<strong>SetTextColor         PROCEDURE(COLORREF)</strong>
</p>

<p>
Changes the default color used to draw text in Text zones. If the passed value is COLOR:None, the color returned by
</p>

<p>
SYSTEM{PROP:FontColor + PROP:StatusFont} is used.
</p>

<p>
<strong>GetProgressColor     PROCEDURE(),COLORREF</strong>
</p>

<p>
Returns the default color used to draw Progress bars in progress zones.
</p>

<p>
<strong>SetProgressColor     PROCEDURE(COLORREF)</strong>
</p>

<p>
Changes the color used to draw Progress bars in progress zones.
</p>

<p>
<strong>GetSeparatorColor    PROCEDURE(),COLORREF</strong>
</p>

<p>
Returns the color used to draw flat separator lines.
</p>

<p>
<strong>SetSeparatorColor    PROCEDURE(COLORREF)</strong>
</p>

<p>
Sets/changes the color used to draw flat separator lines.
</p>

<p>
<strong>HasZoneBevel         PROCEDURE(SIGNED),BOOLEAN   </strong>! Parameter: ZoneKind
</p>

<p>
Returns the default value of the flag to draw a bevel around the content rectangle for zones of a given kind.
</p>

<p>
<strong>SetZoneBevel         PROCEDURE(SIGNED, BOOLEAN) </strong>! 1st Parameter: ZoneKind
</p>

<p>
Changes default value of the flag to draw the bevel around the content rectangle for zones of the kind given by the first parameter.
</p>

<p>
Default value is TRUE for text zones and FALSE for image and progress zones.
</p>

<p>
<strong>GetFlag              PROCEDURE(SIGNED),BOOLEAN </strong> ! Parameter: StatusStyleFlag
</p>

<p>
Returns value of the style flag corresponding to        passed parameter. Parameter must be one of the values listed in the StausStyleFlag ITEMIZE structure:
</p>

<p>
STATUS:THEMED - if TRUE, and themes are available for the program (has a manifest), some metrics and visual aspects are determined by the visual theme rather than by values set in the style. If the flag is FALSE, the style does not use the visual theme.
</p>

<p>
STATUS:SEPARATOR - if TRUE, the separator line is drawn after every zone except the last one by default. If the flag is FALSE (default), separators are not drawn unless this setting is overridden in a particular zone.
</p>

<p>
STATUS:GRIPPER - If TRUE, the resize gripper is drawn in the lower-far corner of status bars owned by resizable not-maximized WINDOWs. If flag is FALSE (default), the gripper is not drawn.
</p>

<p>
STATUS:BORDER3D - If TRUE, the status bar&#039;s upper edge is drawn using a bevel. If the flag is FALSE, a flat border is drawn. The flag only affects un-themed status bars using solid colors to paint the bar&#039;s background. The flat border is drawn in all other cases.
</p>

<p>
STATUS:SEPARATOR3D - If TRUE, separator lines are drawn using a bevel. If the flag is FALSE, the separator line is drawn flat. The flag is ignored for themed status bars.
</p>

<p>
<strong>SetFlag              PROCEDURE(SIGNED, BOOLEAN)</strong>  ! 1st Parameter: StatusStyleFlag
</p>

<p>
Changes the value of the style flag corresponding to the passed first parameter. This parameter must have one of values listed in the StatusStyleFlag ITEMIZE structure.
</p>
<hr />

<p>
<strong>IStatusBar         INTERFACE,COM</strong>
</p>

<p>
<strong>ApplyStyle           PROCEDURE(&lt;;*IStatusStyle&gt;)</strong>
</p>

<p>
Applies parameters of the passed style to the status bar.
</p>

<p>
The interfaces are planned to be available in a future release<br/>

</p>

<p>
<strong>NumZones             PROCEDURE(),UNSIGNED</strong>
</p>

<p>
Returns the number of zones in the status bar.
</p>

<p>
<strong>GetZone              PROCEDURE(UNSIGNED idx),*IStatusZone</strong>
</p>

<p>
Returns a reference to an object representing the zone with the passed index. The index value is 1-based. If the passed index is 0 or greater than the total number of zones, a NULL reference is returned.
</p>

<p>
<strong>AddZone              PROCEDURE(UNSIGNED idx, SIGNED),*IStatusZone </strong>! 2nd Parameter: ZoneKind
</p>

<p>
Creates the object implementing the zone of given kind and inserts it at position specified by first parameter. If position parameter is out of range 1..&lt;;number of zones&gt;, the created zone is appending to the end of list of zones. The position value is 1-based.
</p>

<p>
<strong>DeleteZones          PROCEDURE(UNSIGNED start,  UNSIGNED cnt = 1)</strong>
</p>

<p>
Destroys the number of zones equal to the second parameter starting from the position given by the first parameter. By default, the only zone is creating. If second parameter is 0, all zones after the passed position are destroyed.
</p>

<p>
<strong>* Notes:

DeleteZone can be used to delete all zones from the status bar. This leaves an empty status bar.

</strong>Freeze               PROCEDURE()<strong>

Freezes the status bar to avoid multiple redrawings on multiple changes to zones.

</strong>Unfreeze             PROCEDURE()<strong>

Unfreezes previously frozen status bar. More than one level of freezing is possible, therefore the number of calls to Unfreeze must be equal to number of calls to Freeze.

</strong>SetClickCallback     PROCEDURE(&lt;;StatusClickCallback&gt;, LONG param = 0)**
</p>

<p>
Sets a callback function that is invoked if the mouse is clicked or double clicked within content rectangle of any zone. The 1-based index of clicked zone is passed to the callback function as a parameter. The KEYCODE() function can be used to determine which mouse button has been clicked.
</p>

</div>

                    <!-- wikipage stop -->
                                    </div>

                <div class="docInfo"><bdi>status_interfaces.htm.txt</bdi> · Last modified: 2021/04/15 15:57 (external edit)</div>

                            </div></div><!-- /content -->

            <hr class="a11y" />

            <!-- PAGE ACTIONS -->
            <div id="dokuwiki__pagetools">
                <h3 class="a11y">Page Tools</h3>
                <div class="tools">
                    <ul>
                        <li class="source"><a href="/doku.php?id=status_interfaces.htm&amp;do=edit" title="Show pagesource [v]" rel="nofollow" accesskey="v"><span>Show pagesource</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M13 9h5.5L13 3.5V9M6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.11.89-2 2-2m.12 13.5l3.74 3.74 1.42-1.41-2.33-2.33 2.33-2.33-1.42-1.41-3.74 3.74m11.16 0l-3.74-3.74-1.42 1.41 2.33 2.33-2.33 2.33 1.42 1.41 3.74-3.74z"/></svg></a></li><li class="revs"><a href="/doku.php?id=status_interfaces.htm&amp;do=revisions" title="Old revisions [o]" rel="nofollow" accesskey="o"><span>Old revisions</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M11 7v5.11l4.71 2.79.79-1.28-4-2.37V7m0-5C8.97 2 5.91 3.92 4.27 6.77L2 4.5V11h6.5L5.75 8.25C6.96 5.73 9.5 4 12.5 4a7.5 7.5 0 0 1 7.5 7.5 7.5 7.5 0 0 1-7.5 7.5c-3.27 0-6.03-2.09-7.06-5h-2.1c1.1 4.03 4.77 7 9.16 7 5.24 0 9.5-4.25 9.5-9.5A9.5 9.5 0 0 0 12.5 2z"/></svg></a></li><li class="backlink"><a href="/doku.php?id=status_interfaces.htm&amp;do=backlink" title="Backlinks" rel="nofollow"><span>Backlinks</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M10.59 13.41c.41.39.41 1.03 0 1.42-.39.39-1.03.39-1.42 0a5.003 5.003 0 0 1 0-7.07l3.54-3.54a5.003 5.003 0 0 1 7.07 0 5.003 5.003 0 0 1 0 7.07l-1.49 1.49c.01-.82-.12-1.64-.4-2.42l.47-.48a2.982 2.982 0 0 0 0-4.24 2.982 2.982 0 0 0-4.24 0l-3.53 3.53a2.982 2.982 0 0 0 0 4.24m2.82-4.24c.39-.39 1.03-.39 1.42 0a5.003 5.003 0 0 1 0 7.07l-3.54 3.54a5.003 5.003 0 0 1-7.07 0 5.003 5.003 0 0 1 0-7.07l1.49-1.49c-.01.82.12 1.64.4 2.43l-.47.47a2.982 2.982 0 0 0 0 4.24 2.982 2.982 0 0 0 4.24 0l3.53-3.53a2.982 2.982 0 0 0 0-4.24.973.973 0 0 1 0-1.42z"/></svg></a></li><li class="top"><a href="#dokuwiki__top" title="Back to top [t]" rel="nofollow" accesskey="t"><span>Back to top</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M13 20h-2V8l-5.5 5.5-1.42-1.42L12 4.16l7.92 7.92-1.42 1.42L13 8v12z"/></svg></a></li>                    </ul>
                </div>
            </div>
        </div><!-- /wrapper -->

        
<!-- ********** FOOTER ********** -->
<div id="dokuwiki__footer"><div class="pad">
    <div class="license">Except where otherwise noted, content on this wiki is licensed under the following license: <bdi><a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="license" class="urlextern">CC Attribution-Share Alike 4.0 International</a></bdi></div>
    <div class="buttons">
        <a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="license"><img src="/lib/images/license/button/cc-by-sa.png" alt="CC Attribution-Share Alike 4.0 International" /></a>        <a href="https://www.dokuwiki.org/donate" title="Donate" ><img
            src="/lib/tpl/dokuwiki/images/button-donate.gif" width="80" height="15" alt="Donate" /></a>
        <a href="https://php.net" title="Powered by PHP" ><img
            src="/lib/tpl/dokuwiki/images/button-php.gif" width="80" height="15" alt="Powered by PHP" /></a>
        <a href="//validator.w3.org/check/referer" title="Valid HTML5" ><img
            src="/lib/tpl/dokuwiki/images/button-html5.png" width="80" height="15" alt="Valid HTML5" /></a>
        <a href="//jigsaw.w3.org/css-validator/check/referer?profile=css3" title="Valid CSS" ><img
            src="/lib/tpl/dokuwiki/images/button-css.png" width="80" height="15" alt="Valid CSS" /></a>
        <a href="https://dokuwiki.org/" title="Driven by DokuWiki" ><img
            src="/lib/tpl/dokuwiki/images/button-dw.png" width="80" height="15" alt="Driven by DokuWiki" /></a>
    </div>
</div></div><!-- /footer -->

    </div></div><!-- /site -->

    <div class="no"><img src="/lib/exe/indexer.php?id=status_interfaces.htm&amp;1631826761" width="2" height="1" alt="" /></div>
    <div id="screen__mode" class="no"></div></body>
</html>
